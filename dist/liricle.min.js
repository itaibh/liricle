/*!
 * liricle v3.0.0
 * Mini library to run & sync LRC file
 * https://github.com/mcanam/liricle#readme
 * MIT license by mcanam
 */
var n,t;n=this,t=function(){"use strict";const n=/\[([a-z]+):(.+)\]/i,t=/\[\d{2}:\d{2}(.\d{2,})?\]{1,}/g,e=/(<\d{2}:\d{2}.\d{2,}>\s{0,}([^\s]+))/g,i=/<\d{2}:\d{2}(.\d{2,})?>/,c={lines:[],tags:{},enhanced:!1};let s=0;function o(e){return i.test(e)&&(c.enhanced=!0),e.split(/\r|\n/).forEach((e=>{!function(t){const e=t.match(n);if(null==e)return;const i=e[1],s=e[2].trim();c.tags[i]=s}(e),function(n){const e=n.match(t);null!=e&&e.forEach((t=>{c.lines.push({time:u(t),text:l(n),words:r(n)})}))}(e)})),c.lines=function(n){return n.sort(((n,t)=>n.time-t.time))}(c.lines),c}function r(n){const t=n.match(e),c=[];return null==t?null:(t.forEach((n=>{const t=n.match(i)[0];c.push({index:s,time:u(t),text:l(n)}),s+=1})),c)}function l(n){return(n=(n=n.replace(t,"")).replace(e,"$2")).trim()}function u(n){n=(n=n.replace(/\[|\]|<|>/g,"")).split(":");let[t,e]=n;return t=60*parseInt(t),e=parseFloat(e),t+e}function a(n,t){let e=function(n,t){const e=n.lines,i=d(e,t);return null!=i?{index:i,...e[i]}:null}(n,t),i=null!=e&&n.enhanced?function(n,t){const e=n.words,i=d(e,t);return null!=i?e[i]:null}(e,t):null;return null!=e&&delete e.words,{line:e,word:i}}function d(n,t){const e=[];if(n.forEach((n=>{const i=t-n.time;i>=0&&e.push(i)})),0==e.length)return null;const i=Math.min(...e);return e.indexOf(i)}return class{constructor(){this._activeLine=null,this._onInit=()=>{},this._onSync=()=>{},this.data=null}async init({text:n,url:t}){let e=n;if(t)try{const n=await fetch(t);e=await n.text()}catch(n){throw Error(n)}this.data=o(e),this._onInit(this.data)}sync(n,t=0){const{line:e,word:i}=a(this.data,n+t);if(!this.data.enhanced){if(null==e.index||e.index==this._activeLine)return;return this._activeLine=e.index,this._onSync(e,i)}this._onSync(e,i)}on(n,t){if("function"!=typeof t)throw Error("callback must be a function!");switch(n){case"init":this._onInit=t;break;case"sync":this._onSync=t}}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).Liricle=t();
//# sourceMappingURL=liricle.min.js.map
